// <auto-generated />
using System;
using Liviu_Padurariu_Proiect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Liviu_Padurariu_Proiect.Migrations
{
    [DbContext(typeof(Liviu_Padurariu_ProiectContext))]
    [Migration("20231216203238_UpdateEverythingTwice")]
    partial class UpdateEverythingTwice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Liviu_Padurariu_Proiect.Models.Car", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CarMakerID")
                        .HasColumnType("int");

                    b.Property<int?>("ColorID")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(5,0)");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<int?>("TransmissionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CarMakerID");

                    b.HasIndex("ColorID");

                    b.HasIndex("TransmissionID");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("Liviu_Padurariu_Proiect.Models.CarMaker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CarMaker");
                });

            modelBuilder.Entity("Liviu_Padurariu_Proiect.Models.Color", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("Liviu_Padurariu_Proiect.Models.Transmission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Transmission");
                });

            modelBuilder.Entity("Liviu_Padurariu_Proiect.Models.Car", b =>
                {
                    b.HasOne("Liviu_Padurariu_Proiect.Models.CarMaker", "CarMaker")
                        .WithMany()
                        .HasForeignKey("CarMakerID");

                    b.HasOne("Liviu_Padurariu_Proiect.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorID");

                    b.HasOne("Liviu_Padurariu_Proiect.Models.Transmission", "Transmission")
                        .WithMany()
                        .HasForeignKey("TransmissionID");

                    b.Navigation("CarMaker");

                    b.Navigation("Color");

                    b.Navigation("Transmission");
                });
#pragma warning restore 612, 618
        }
    }
}
